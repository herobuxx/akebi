#!/bin/bash

# Examine user input
export USER_ACTION="${1}"

case $USER_ACTION in

  --cpu | -c )
    ACTION="cpu"
    ;;

  --memory | -m )
    ACTION="memory"
    ;;

  --system | -s )
    ACTION="system"
    ;;

  --help | -h )
    ACTION="help"
    ;;

  --version | -v )
    ACTION="version"
    ;;

  --ip | -i )
    ACTION="ip"
    ;;

  --pr | -p )
    ACTION="pretty"
    ;;

  *)
    ACTION="main"
    ;;
esac

# Define My OS
GETPROP_AVAILABLE="$(command -v getprop)"
KERNEL_NAME=$(uname -s)
case $KERNEL_NAME in

  Linux|GNU) 
    if [[ $GETPROP_AVAILABLE != "" ]]
    then
       OS_TYPE="android"
    else
       OS_TYPE="linux"
    fi
  ;;

  Darwin) 
    OS_TYPE="mac"
  ;;

  CYGWIN*|MSYS*|MINGW*) 
    OS_TYPE="windows"
  ;;
esac

############################################
#                                          #
#        Let's Grab the informations       #
#                                          #
############################################

###########################################
# Akebi version                           #
###########################################

AKEBI_VERSION="1.1"

if [[ -f "/usr/lib/akebi/commit-head" ]]
then
  AKEBI_COMMIT_HEAD=$(cat /usr/lib/akebi/commit-head)
else
  AKEBI_COMMIT_HEAD="HEAD commit info is not available"
fi
###########################################
# CPU and Memory Info                     #
###########################################

# CPU Model Name
if [[ "${OS_TYPE}" == "mac" ]]; then
  CPU_MODEL=$(sysctl -n machdep.cpu.brand_string)
else
  CPU_MODEL="$(awk -F':' '/^model name/ {split($2, A, " @"); print A[1]; exit}' /proc/cpuinfo | sed 's/ //')"
fi

# CPU Core Number
if [[ "${OS_TYPE}" == "mac" ]]; then
  CPU_CORES="$(sysctl -n hw.physicalcpu_max)"
else
  CPU_CORES="$(nproc)"
fi

# CPU Core Number
if [[ "${OS_TYPE}" == "mac" ]]; then
  CPU_USAGE="$(ps -A -o %cpu | awk '{s+=$1} END {print s "%"}')"
elif [[ "${OS_TYPE}" == "android" ]]; then
  CPU_USAGE=""
else
  CPU_USAGE="$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1"%"}')"
fi

# Memory Total Number
if [[ "${OS_TYPE}" == "mac" ]]; then
  MEM_TOTAL=$(echo "$(sysctl -n hw.memsize)" / 1024^2 | bc)
else
  MEM_TOTAL=$(($(awk '/MemTotal/ {print $2}' /proc/meminfo) / 1024))
fi

# Memory free
if [[ "${OS_TYPE}" == "mac" ]]; then
  MEM_FREE="$(($(vm_stat | awk '/free/ {gsub(/\./, "", $3); print $3}') / 1024))"
else
  MEM_FREE="$(($(awk '/MemFree/ {print $2}' /proc/meminfo) / 1024))"
fi

MEM_TOTAL_GB="$(($MEM_TOTAL / 1024))"
MEM_FREE_GB="$(($MEM_FREE / 1024))"

###########################################
# System Info                             #
###########################################

# System Info Variables
SYS_TYPE=$(uname -m)

if [[ "${OS_TYPE}" == "mac" ]]; then
  SYS_REL="macOS $(sw_vers | grep ProductVersion | awk '{print $2}')"
elif [[ "${OS_TYPE}" == "linux" ]]; then
  SYS_REL="$(lsb_release -d | cut -d ':' -f 2 | sed -e 's/^[[:space:]]*//')"
elif [[ "${OS_TYPE}" == "windows" ]]; then
  SYS_REL="Microsoft(R) Windows(TM)"
elif [[ "${OS_TYPE}" == "android" ]]; then
  ANDROID_VER_NUM="$(getprop ro.build.version.release)"
  ANDROID_VER="Android(TM) $ANDROID_VER_NUM"
  SYS_REL="$ANDROID_VER"
else
  SYS_REL=""
fi


SYS_OS_TYPE=$(uname -s)
SYS_KERNEL_REL=$(uname -r)
SYS_KERNEL_VER="${SYS_OS_TYPE} ${SYS_KERNEL_REL}"

# Network Info Variables
if [[ "${OS_TYPE}" == "windows" ]]; then
  PUBLIC_IP=""
elif [[ "${OS_TYPE}" == "android" ]]; then
  PUBLIC_IP=""
else
  PUBLIC_IP="$(wget -qO - icanhazip.com)"
fi


# Session Info Variables
SES_TERM=${TERM}
SES_SHELL=${SHELL}

# Machine Info Variables
if [[ "${OS_TYPE}" == "mac" ]]; then
  boot_s_sys=$(sysctl -n kern.boottime)
  boot_s_raw=${boot_s_sys/\{ sec = }
  boot=${boot_s_raw/,*}

  now=$(date +%s)
  boot_s=$((now - boot))

else
  if [[ -r /proc/uptime ]]; then
    boot_s_raw=$(< /proc/uptime)
    boot_s=${boot_s_raw/.*}
  else
    boot_s_raw=$(date -d"$(uptime -s)" +%s)
    now=$(date +%s)
    boot_s=$((now - boot_s_raw))
  fi
fi

# Boot times
boot_min="$((boot_s / 60 % 60))"
boot_hour="$((boot_s / 60 / 60 % 24))"
boot_day="$((boot_s / 60 / 60 / 24))"

# Show day, and hours conditionally
if [[ $boot_min > 59 ]]
then
  MACHINE_UPTIME="${boot_hour} hour(s), ${boot_min} minutes(s)"
elif [[ $boot_hour > 23 ]]
then
  MACHINE_UPTIME="${boot_day} day(s), ${boot_hour} hour(s), ${boot_min} minutes(s)"
else
  MACHINE_UPTIME="${boot_min} minutes(s)"
fi

LINUX_MACHINE_UPTIME="$(uptime -p)"
# Display Info Variables
if [[ "${OS_TYPE}" == "linux" ]]; then
  DISPLAY_RES=$(xrandr |awk '/\*/ {print $1}')
else
  DISPLAY_RES=""
fi

# Add other stuff for Android
if [[ "${OS_TYPE}" == "android" ]]; then
  ANDROID_BUILD_NUM="$(getprop ro.build.id)"
  ANDROID_BUILD_TYPE="$(getprop ro.build.type)"

else
  ANDROID_BUILD_NUM=""
  ANDROID_BUILD_TYPE=""
fi

# Username and hostname
THIS_USERNAME=$USER
THIS_HOSTNAME=$HOSTNAME

# Start the functions
function do_cpu() {
  echo -e "=========================================================="
  echo -e "                  Akebi - CPU Information                 "
  echo -e "=========================================================="
  if [[ "${CPU_MODEL}" != "" ]]; then
    echo -e "CPU Model         :  ${CPU_MODEL}"
  fi

  if [[ "${CPU_CORES}" != "" ]]; then
    echo -e "CPU Core(s)       :  ${CPU_CORES} Core(s)"
  fi

  if [[ "${CPU_USAGE}" != "" ]]; then
    echo -e "CPU Usage         :  ${CPU_USAGE}%"
  fi
  echo -e "=========================================================="
  echo -e " "
}

function do_memory() {
  echo -e "=========================================================="
  echo -e "                Akebi - Memory Information                "
  echo -e "=========================================================="
  if [[ "${MEM_TOTAL}" != "" ]]; then
    echo -e "Memory Total      :  ${MEM_TOTAL} MB"
  fi

  if [[ "${MEM_FREE}" != "" ]]; then
    echo -e "Memory Free       :  ${MEM_FREE} MB"
  fi
  echo -e "=========================================================="
  echo -e " "
}

function do_system() {
  echo -e "=========================================================="
  echo -e "                Akebi - System Information                "
  echo -e "=========================================================="


  if [[ "${SYS_REL}" != "" ]]; then
    echo -e "Installed OS      :  ${SYS_REL}"
  fi

  if [[ "${ANDROID_BUILD_TYPE}" != "" ]]; then
    echo -e "Build Type        :  ${ANDROID_BUILD_TYPE}"
  fi

  if [[ "${ANDROID_BUILD_NUM}" != "" ]]; then
    echo -e "Build Number      :  ${ANDROID_BUILD_NUM}"
  fi

  if [[ "${SYS_TYPE}" != "" ]]; then
    echo -e "System Type       :  ${SYS_TYPE}"
  fi

  if [[ "${SYS_KERNEL_VER}" != "" ]]; then
    echo -e "Kernel Version    :  ${SYS_KERNEL_VER}"
  fi

  if [[ "${SES_TERM}" != "" ]]; then
    echo -e "Terminal          :  ${SES_TERM}"
  fi

  if [[ "${SES_SHELL}" != "" ]]; then
    echo -e "Shell             :  ${SES_SHELL}"
  fi

  if [[ "${OS_TYPE}" == "linux" ]]; then
    if [[ "${MACHINE_UPTIME}" != "" ]]; then
      echo -e "Uptime            :  ${LINUX_MACHINE_UPTIME}"
    fi
  else
    if [[ "${MACHINE_UPTIME}" != "" ]]; then
      echo -e "Uptime            :  ${MACHINE_UPTIME}"
    fi
  fi

  echo -e "=========================================================="}
  echo -e " "
}

function do_help() {
  echo -e "This is Akebi! A simple bash scipt to show your Linux System Information"
  echo -e " "
  echo -e "Usage: $0 [OPTION]"
  echo -e " "
  echo -e "Available Options:"
  echo -e " "
  echo -e "  -c, --cpu      Show Your CPU information"
  echo -e "  -h, --help     Show Help page. You are actually reading it right now!"
  echo -e "  -i, --ip       Show your Public IP Address"
  echo -e "  -m, --memory   Show Your Memory information"
  echo -e "  -m, --system   Show Your System information"
  echo -e "  -v, --version  Show About Akebi Version"
  echo -e " "
}

function do_version() {
  echo -e " "
  echo -e " Akebi v${AKEBI_VERSION} ($AKEBI_COMMIT_HEAD)"
  echo -e " A Simple Bash Script to show your System Information"
  echo -e " "
}

function do_ip() {
  echo -e "=========================================================="
  echo -e "                Akebi - Memory Information                "
  echo -e "=========================================================="
  if [[ "${PUBLIC_IP}" != "" ]]; then
    echo -e "Public IP Address :  ${PUBLIC_IP}"
  fi
  echo -e "=========================================================="
}

function do_main() {
  # The main interface
  echo -e "=========================================================="
  echo -e "                Akebi - System Information                "
  echo -e "=========================================================="
  if [[ "${CPU_MODEL}" != "" ]]; then
    echo -e "CPU Model         :  ${CPU_MODEL}"
  fi

  if [[ "${CPU_CORES}" != "" ]]; then
    echo -e "CPU Core(s)       :  ${CPU_CORES} Core(s)"
  fi

  if [[ "${CPU_USAGE}" != "" ]]; then
    echo -e "CPU Usage         :  ${CPU_USAGE}%"
  fi

  if [[ "${MEM_TOTAL}" != "" ]]; then
    echo -e "Memory Total      :  ${MEM_TOTAL} MB"
  fi

  if [[ "${MEM_FREE}" != "" ]]; then
    echo -e "Memory Free       :  ${MEM_FREE} MB"
  fi

  if [[ "${SYS_REL}" != "" ]]; then
    echo -e "Installed OS      :  ${SYS_REL}"
  fi

  if [[ "${ANDROID_BUILD_TYPE}" != "" ]]; then
    echo -e "Build Type        :  ${ANDROID_BUILD_TYPE}"
  fi
  
  if [[ "${ANDROID_BUILD_NUM}" != "" ]]; then
    echo -e "Build Number      :  ${ANDROID_BUILD_NUM}"
  fi
  
  if [[ "${SYS_TYPE}" != "" ]]; then
    echo -e "System Type       :  ${SYS_TYPE}"
  fi

  if [[ "${SYS_KERNEL_VER}" != "" ]]; then
    echo -e "Kernel Version    :  ${SYS_KERNEL_VER}"
  fi

  if [[ "${SES_TERM}" != "" ]]; then
    echo -e "Terminal          :  ${SES_TERM}"
  fi

  if [[ "${SES_SHELL}" != "" ]]; then
    echo -e "Shell             :  ${SES_SHELL}"
  fi

  if [[ "${OS_TYPE}" == "linux" ]]; then
    if [[ "${MACHINE_UPTIME}" != "" ]]; then
      echo -e "Uptime            :  ${LINUX_MACHINE_UPTIME}"
    fi
  else
    if [[ "${MACHINE_UPTIME}" != "" ]]; then
      echo -e "Uptime            :  ${MACHINE_UPTIME}"
    fi
  fi


  # Screen Resolution
  if [[ "${DISPLAY_RES}" != "" ]]; then
    echo -e "Screen Resolution :  ${DISPLAY_RES}"
  fi
  echo -e "=========================================================="
  echo -e " "
}

function do_pretty() {
  echo -e "$THIS_USERNAME@$THIS_HOSTNAME"
  echo -e "------"
  if [[ "${CPU_MODEL}" != "" ]]; then
    echo -e "${CPU_MODEL}"
  fi
  if [[ "${SYS_REL}" != "" ]]; then
    echo -e "${SYS_REL}"
  fi
  echo -e "$MEM_FREE_GB GB free of $MEM_TOTAL_GB GB total RAM"
}

do_${ACTION}
